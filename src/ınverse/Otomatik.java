/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ınverse;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Arrays;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mehmetcan
 */
public class Otomatik extends javax.swing.JFrame {

    //Left Inverse basement http://help.matheass.eu/en/Pseudoinverse.html
    Matrisler nesne;

    /**
     * Creates new form Otomatik
     */
    public Otomatik() {

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton3.setText("Matris Olustur");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Matris Olustur");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Column 1", "Column 2", "Column 3", "Column 4", "Column 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jLabel1.setText("Satır");

        jLabel2.setText("Sütun");

        jButton2.setText("Transpoz ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("Kendisi çarpım Transpoz");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Tersini Al");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Pseudo Inverse");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel3.setText("İşlem ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 573, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(41, 41, 41)
                        .addComponent(jButton2)
                        .addGap(51, 51, 51)
                        .addComponent(jButton4)
                        .addGap(44, 44, 44)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel liste = (DefaultTableModel) jTable3.getModel();
        liste.setRowCount(0);
        int m = 0;
        //int topSayac=0;
        // int carpSayac=0;
        int numberOfX = (int) ((Math.random() * 10) % 6);
        int numberOfY = (int) ((Math.random() * 10) % 6);

        if (numberOfX == 0) {
            numberOfX = numberOfX + 1;
        }
        if (numberOfY == 0) {
            numberOfY = numberOfY + 1;
        }
        if (numberOfY == numberOfX) {

            if (numberOfX == 1) {
                numberOfY = numberOfY + 1;
            } else if (1 < numberOfX && numberOfX <= 5) {
                numberOfY = numberOfY - 1;
            }
        }
        System.out.println("ilk sayi:" + numberOfX + "    ikinci sayi:" + numberOfY);

        String[][] matris = new String[numberOfX][numberOfY];
        String[][] transpozMatrisi = new String[numberOfX][numberOfY];
        //int[][] matris = new int[numberOfX][numberOfY];
        jTextField1.setText(String.valueOf(numberOfX));
        jTextField2.setText(String.valueOf(numberOfY));
        jTextField3.setText("A");

        for (int i = 0; i < numberOfX; i++) {

            for (int j = 0; j < numberOfY; j++) {
                m = (int) (((Math.random() * 10) + 1) % 9);

                matris[i][j] = String.valueOf(m);

                System.out.print(matris[i][j] + "\t");

            }

            System.out.println("\n");
        }

        //that point  
        nesne = new Matrisler(matris, numberOfX, numberOfY);
        ///   

        for (int z = 0; z < matris.length; z++) {

            String[] row = new String[matris[z].length];

            for (int k = 0; k < matris[z].length; k++) {

                row[k] = matris[z][k];
            }
            liste.addRow(row);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Transpose
        DefaultTableModel liste = (DefaultTableModel) jTable3.getModel();
        liste.setRowCount(0);

        int satir = nesne.getRandomSatir();
        int sutun = nesne.getRandomSutun();
        System.out.println("Deger:" + satir + " " + " Deger Sutun: " + sutun);
        String[][] transpozMatrisi = new String[sutun][satir];
        String[][] tempMatris = nesne.getRandomMatris();

        for (int i = 0; i < sutun; i++) {

            for (int j = 0; j < satir; j++) {

                transpozMatrisi[i][j] = tempMatris[j][i];

                System.out.print(transpozMatrisi[i][j] + "\t");

            }

            System.out.println("\n");
        }
        nesne = new Matrisler(tempMatris, transpozMatrisi, satir, sutun);
        jTextField1.setText(String.valueOf(sutun));
        jTextField2.setText(String.valueOf(satir));
        jTextField3.setText("A(transpoze)");
        for (int z = 0; z < transpozMatrisi.length; z++) {

            String[] row = new String[transpozMatrisi[z].length];

            for (int k = 0; k < transpozMatrisi[z].length; k++) {

                row[k] = transpozMatrisi[z][k];
            }
            liste.addRow(row);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.out.print("Hello");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        DefaultTableModel liste = (DefaultTableModel) jTable3.getModel();
        liste.setRowCount(0);
        int satir = nesne.getRandomSatir();
        int sutun = nesne.getRandomSutun();
        String[][] tempMatris = nesne.getRandomMatris();
        String[][] tempTransMatris = nesne.getTransMatris();
        int sum = 0;
        String[][] resultMatrix = new String[satir][satir];
        jTextField1.setText(String.valueOf(satir));
        jTextField2.setText(String.valueOf(satir));
        jTextField3.setText("A x A(transpoze)");

        for (int i = 0; i < satir; i++) {
            for (int j = 0; j < satir; j++) {
                for (int k = 0; k < sutun; k++) {
                    sum = sum + Integer.parseInt(tempMatris[i][k]) * Integer.parseInt(tempTransMatris[k][j]);

                }
                resultMatrix[i][j] = String.valueOf(sum);

                sum = 0;
            }
        }
        System.out.println("//////////////////////////// \n");
        for (int i = 0; i < satir; i++) {

            for (int j = 0; j < satir; j++) {

                System.out.print(resultMatrix[i][j] + "\t");

            }

            System.out.println("\n");
        }

        nesne = new Matrisler(resultMatrix, tempTransMatris, sutun, satir);

        for (int z = 0; z < resultMatrix.length; z++) {

            String[] row = new String[resultMatrix[z].length];

            for (int k = 0; k < resultMatrix[z].length; k++) {

                row[k] = resultMatrix[z][k];
            }
            liste.addRow(row);
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //Gauss-Jordan Elimination for Finding Inverse
        DefaultTableModel liste = (DefaultTableModel) jTable3.getModel();
        liste.setRowCount(0);
        int satir = nesne.getRandomSutun();
        int sutun = nesne.getRandomSatir();
        Ters obje = new Ters();
        String[][] tempMatris = nesne.getRandomMatris(); //satirxsatir 
        String[][] tempTransMatris = nesne.getTransMatris();
        NumberFormat formatter = new DecimalFormat("#0.0");
        double y;
        jTextField1.setText(String.valueOf(satir));
        jTextField2.setText(String.valueOf(satir));
        jTextField3.setText("(A x A(transpoze))'");

        double a[][] = new double[tempMatris.length][tempMatris.length];
        for (int i = 0; i < tempMatris.length; ++i) {
            for (int j = 0; j < tempMatris.length; ++j) {

                a[i][j] = Double.parseDouble(tempMatris[i][j]);
            }
            System.out.println();
        }
        double[][] d = obje.tersiAl(a);

        nesne = new Matrisler(d, tempTransMatris, satir, sutun);
        for (int z = 0; z < d.length; z++) {

            String[] row = new String[d[z].length];

            for (int k = 0; k < d[z].length; k++) {

                row[k] = formatter.format(d[z][k]);
            }
            liste.addRow(row);
        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //final Matris
        DefaultTableModel liste = (DefaultTableModel) jTable3.getModel();
        liste.setRowCount(0);

        double[][] tempMatris = nesne.getRandomMatris1();
        String[][] tempTransMatris = nesne.getTransMatris();
        NumberFormat formatter = new DecimalFormat("#0.0");
        int satirA = tempTransMatris.length;
        int sutunA = tempMatris[0].length;
        int sutunB = tempTransMatris[0].length;

        
        double[][] resultMatrix = new double[satirA][sutunB];

        double sum = 0.0;

        for (int i = 0; i < satirA; i++) {
            for (int j = 0; j < sutunB; j++) {
                for (int k = 0; k < sutunA; k++) {
                    sum = sum + (tempMatris[k][j] * Integer.parseInt(tempTransMatris[i][k]));

                }

                resultMatrix[i][j] = sum;
                sum = 0;
            }
        }
        System.out.println("//////////////////////////// \n");
        for (int i = 0; i < satirA; i++) {

            for (int j = 0; j < sutunB; j++) {

                System.out.print(resultMatrix[i][j] + "\t");

            }

            System.out.println("\n");
        }
        jTextField1.setText(String.valueOf(satirA));
        jTextField2.setText(String.valueOf(sutunB));
        jTextField3.setText(" A(transpoze)*(A x A(transpoze))'");
        for (int z = 0; z < resultMatrix.length; z++) {

            String[] row = new String[resultMatrix[z].length];

            for (int k = 0; k < resultMatrix[z].length; k++) {

                row[k] = formatter.format(resultMatrix[z][k]);
            }
            liste.addRow(row);
        }


    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Otomatik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Otomatik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Otomatik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Otomatik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Otomatik().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
